#include <stdio.h>

 float sumofarray(float c[],int n)
 {
 	int i;
 	float sum=0.0;
 
    for(i=0; i<n; i++)
    {
         sum+=c[i];
         
    }
 	return sum;
 }
 
 void convert(int n, int i)
{
    int k;
    for (k = i - 1; k >= 0; k--) {
 
        if ((n >> k) & 1)
            printf("1");
        else
            printf("0");
    }
}
 
typedef union {
 
    float f;
    struct
    {
        unsigned int mantissa : 23;
        unsigned int exponent : 8;
        unsigned int sign : 1;
    } raw;
} myfloat;
 
void ieee(myfloat var)
{
    printf("%d | ", var.raw.sign);
    convert(var.raw.exponent, 8);
    printf(" | ");
    convert(var.raw.mantissa, 23);
    printf(" \n ");
}
 
int main()
{
    float a[5], b[5], c[5];
    int i,n,j,k,l;
    float sum;
    myfloat var;
   
    //size of array = n;
    n = 1;
 
    printf("Enter elements in array 1 : ");
    for(i=0; i<n; i++)
    {
        scanf("%f",&a[i]);
    }
    
    printf("Enter elements in array 2 : ");
    for(j=0; j<n; j++)
    {
        scanf("%f",&b[j]);
    }
    
    for(k = 0; k<n; k++){
        c[k] = a[k]*b[k];
    }
    
    printf("Enter elements in mult array : ");
    for(l=0; l<n; l++)
    {
        printf("%f \n",c[l]);
    }
    
    sum=sumofarray(c,n);
    
    printf("output sum is :%f \n",sum);
 
    var.f = sum;
 
    // Get the IEEE floating point representation
    printf("IEEE 754 representation of %f is : \n",
           sum);
    ieee(var);

    return 0;
}
